<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="Xts" Id="{4538c683-94fc-49a1-b5ad-30ffec5e4eff}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ABSTRACT Xts IMPLEMENTS ICyclic, I_Initialise
VAR
	MyName : STRING;
	_MyXts : INT;
	_MyCAGroup : STRING;
	_XtsEnabled : BOOL;
	XtsIoEnvVar : XTSIOEnvVarWrapper;
	mcCollisionGroup : CollisionGroup;
	XtsHardware : XTSHardware := (MyXtsIoEnvVarWrapper := XtsIoEnvVar);
	XtsHwState : XtsSystemInitialisation;
	EnableSequence : XtsEnableSequence(mcCollisionGroup);
	DisableSequence : XtsDisableSequence(mcCollisionGroup);
	State : UINT;	
	i : UINT;
	AtHome: BOOL;
	EnabledTrigger : R_TRIG;
	DisabledTrigger : R_TRIG;
END_VAR
VAR_IN_OUT
	_MoverArray : ARRAY[*] OF ITF_XtsMoverAxis;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Folder Name="Operations" Id="{0e8598c4-3d58-4c14-a12f-6fd3f3ea02bf}" />
    <Folder Name="Settings" Id="{cec05bdb-9232-4b5d-b91e-848bd7bc55d9}" />
    <Folder Name="Status" Id="{c34f5481-c408-4671-a299-9c4a6e31956c}" />
    <Method Name="ActivateTracksInMovers" Id="{682f2d4e-bf73-44bf-93e3-716a6d45755c}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC ActivateTracksInMovers : BOOL
VAR
	ActivateTrackResult : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO TO_UINT(UPPER_BOUND(_MoverArray,1)) DO
	_MoverArray[i].ActivateTrack(newTrack := _MoverArray[i].MoversActiveTrack,
									Track := XtsHardware.GetTrackByOTCID(trackOTCID := _MoverArray[i].MoversActiveTrack));
END_FOR
ActivateTracksInMovers := true;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Cycle" Id="{da42838e-fb00-40a5-96f4-b787aa883566}">
      <Declaration><![CDATA[METHOD PUBLIC Cycle : HRESULT
VAR
	EnableResult : HRESULT;
	DisableResult : HRESULT;
	GrpStopResult : HRESULT;
	CollisionResult : HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[EnableResult := EnableSequence.Cycle();
DisableResult := DisableSequence.Cycle();
CollisionResult := mcCollisionGroup.Cycle();
EnabledTrigger(CLK := EnableSequence.Done);
DisabledTrigger(CLK := DisableSequence.Done);
XtsHardware.Cycle();
IF EnabledTrigger.Q THEN
	_XtsEnabled := TRUE;
END_IF
IF DisabledTrigger.Q THEN
	_XtsEnabled := false;
END_IF
IF EnableResult = E_FAIL OR
	DisableResult = E_FAIL OR
	GrpStopResult = E_FAIL OR
	CollisionResult = E_FAIL THEN
	Cycle := E_FAIL;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="DisableXTS" Id="{e2a85e5a-c7bf-481d-be4f-81acebc29fb7}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD DisableXTS : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[DisableXTS := DisableSequence.Disable();]]></ST>
      </Implementation>
    </Method>
    <Method Name="EnableXTS" Id="{e800781e-1435-4747-9cb4-9b9fab34ca22}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD EnableXTS : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[EnableSequence.Enable();]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetTMSMoverInterface" Id="{0e64eced-3444-47ea-9660-c818e7a9dea9}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC GetTMSMoverInterface : BOOL
VAR_INPUT
END_VAR
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[FOR i := 1 TO TO_UINT(UPPER_BOUND(_MoverArray,1)) DO
	_MoverArray[i].MoverXtsIoEnvInterface := XtsIoEnvVar.GetMoverInterface(i);
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetTrackByOCTID" Id="{1d75e1be-3c32-4213-9fda-cb384fa7a069}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD GetTrackByOCTID : I_XtsTrack
VAR_INPUT
	TrackId : OTCID;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[GetTrackByOCTID := XtsHardware.GetTrackByOTCID(trackOTCID := TrackId);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initialise" Id="{3c52ae7d-89c5-4979-a1bd-5023a279947c}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD Initialise : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE XtsHwState OF
	XtsSystemInitialisation.Init:
		IF XtsIoEnvVar.Initialise() THEN
			XtsHwState := XtsSystemInitialisation.PassGroupReference;
		END_IF
		
	XtsSystemInitialisation.PassGroupReference:
		mcCollisionGroup.CAGroupXtsIoEnvInterface := XtsIoEnvVar.GetCaGroupInterface(_MyXts);
		_MyCAGroup := mcCollisionGroup.MyName;
		XtsHwState := XtsSystemInitialisation.InitialiseHardware;
	
	XtsSystemInitialisation.InitialiseHardware:
		IF XtsHardware.Initialise() = 2 THEN
			MyName := XtsHardware.MyName;
			XtsHwState := XtsSystemInitialisation.SetDetection;
		END_IF
	
	XtsSystemInitialisation.SetDetection:
		IF XtsHardware.SetTrackForDetection(1) THEN
			XtsHwState := XtsSystemInitialisation.Redetect;
		END_IF
		
	XtsSystemInitialisation.Redetect:
		IF XtsHardware.TriggerRedetection() = 1 THEN
			XtsHwState := XtsSystemInitialisation.MoversValid;
		END_IF
		
	XtsSystemInitialisation.MoversValid:
		IF XtsHardware.getAllMoversValid() THEN
			XtsHwState := XtsSystemInitialisation.AllMoversFound;
		END_IF
	
	XtsSystemInitialisation.AllMoversFound:
		IF XtsHardware.getMoversDetected() THEN
			XtsHwState := XtsSystemInitialisation.XTSMode;
		END_IF
		
	XtsSystemInitialisation.XTSMode:
		IF XtsHardware.IsInSim() THEN
			XtsHwState := XtsSystemInitialisation.MoverIdDetection;
		ELSE
			XtsHwState := XtsSystemInitialisation.CheckModuleVoltages;
		END_IF
		
	XtsSystemInitialisation.CheckModuleVoltages:
		IF XtsHardware.Is24VdcOK() = 2 AND XtsHardware.Is48VdcOK() = 2 THEN
			XtsHwState := XtsSystemInitialisation.MoverIdDetection;
		END_IF
	
	XtsSystemInitialisation.MoverIdDetection:
		IF XtsHardware.TriggerMoverID() THEN
			XtsHwState := XtsSystemInitialisation.HWReady;
			GetTMSMoverInterface();
		END_IF
	
	XtsSystemInitialisation.HWReady:
		Initialise := 2;	
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsXtsIdle" Id="{98f4e7e8-94b6-4461-9a7b-2bd1c0aafde4}" FolderPath="Status\">
      <Declaration><![CDATA[METHOD IsXtsIdle : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsXtsIdle := DisableSequence.Done;]]></ST>
      </Implementation>
    </Method>
    <Method Name="IsXtsReady" Id="{73e2c3f0-1b32-45c2-a8cc-fbf01ac18258}" FolderPath="Status\">
      <Declaration><![CDATA[METHOD IsXtsReady : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IsXtsReady := _XtsEnabled;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MoverHomeSequence" Id="{5c2deb91-ebd0-4a93-99ec-6a6bbbd5e076}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD PUBLIC Abstract MoverHomeSequence : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="MyNumberOfParts" Id="{33632734-2180-4c77-982d-f6997ead5bb5}" FolderPath="Settings\">
      <Declaration><![CDATA[PROPERTY MyNumberOfParts : int]]></Declaration>
      <Get Name="Get" Id="{ec285ff9-810a-46b0-8941-68dcdc1ab79d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MyNumberOfParts := XtsHardware.MyNumberParts;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{4cb5fde4-6845-43ef-b95e-df4929829b0c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[XtsHardware.MyNumberParts := MyNumberOfParts;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="MyNumberOfTracks" Id="{6b69c4c6-afe3-46d9-bc08-86224f82f24a}" FolderPath="Settings\">
      <Declaration><![CDATA[PROPERTY MyNumberOfTracks : int]]></Declaration>
      <Get Name="Get" Id="{cab0d03f-ccb1-4d2e-adb6-3d697ceee44c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MyNumberOfTracks := XtsHardware.MyNumberTracks;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{b24fc04c-e333-4935-bdff-3eff5a7d9932}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[XtsHardware.MyNumberTracks := MyNumberOfTracks;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="MyXts" Id="{b982f888-fcea-49f3-8b85-76339b257fce}" FolderPath="Settings\">
      <Declaration><![CDATA[PROPERTY MyXts : INT]]></Declaration>
      <Get Name="Get" Id="{7260ae55-6d72-4286-9779-c205f4bf658b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MyXts := XtsHardware.MyXts;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{f9bbe24a-eac8-4b47-a949-a650212b0818}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[XtsHardware.MyXts := _MyXts := MyXts;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="StopXts" Id="{4b648283-f5f4-4d47-a58f-be53e519365d}" FolderPath="Operations\">
      <Declaration><![CDATA[METHOD StopXts : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[mcCollisionGroup.GroupStop();]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>
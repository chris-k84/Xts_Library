<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="XtsMotorModule" Id="{447db564-ab24-433c-b078-4cedd1c7411e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK XtsMotorModule EXTENDS CyclicBase
VAR
	MyModuleIoInterface : I_TcIoXtsPartModule;
	CurrentLive: LREAL;
	MaxCurrent: LREAL;
	Nominal24Vdc : REAL := 24.0;
	Nominal48Vdc : REAL := 48.0;
	InSim : BOOL;
	Module24Vdc: REAL;
	Module48Vdc: REAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Cycle" Id="{1188f197-bbd0-4970-903a-af249f1ed9e0}">
      <Declaration><![CDATA[METHOD PUBLIC  Cycle : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF MyModuleIoInterface <> 0 AND NOT InSim THEN
	CurrentLive:= MyModuleIoInterface.GetOverallCurrent();
	MaxCurrent:=  MyModuleIoInterface.GetMaxOverallCurrentLast500ms();
	Module24Vdc := MyModuleIoInterface.GetAuxiliaryVoltage24V();
	Module48Vdc := MyModuleIoInterface.GetDCLinkVoltage();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Initialise" Id="{0d230f78-299f-458d-bcac-a537a1290197}">
      <Declaration><![CDATA[METHOD Initialise : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF MyModuleIoInterface.P_IsInitialized THEN
	Initialise := 2;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Is24VOK" Id="{9b08696d-e0e1-46f9-950f-7b12a84e7180}">
      <Declaration><![CDATA[METHOD Is24VOK : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Is24VOK := 1;
IF Module24Vdc < (Nominal24Vdc * 0.9) THEN
	Is24VOK := -1;
END_IF
IF Module24Vdc > (Nominal24Vdc * 1.1) THEN
	Is24VOK := -1;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Is48VOK" Id="{f76f25e2-8796-412c-b16e-72d1b643b91d}">
      <Declaration><![CDATA[METHOD Is48VOK : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Is48VOK := 1;
IF Module48Vdc < (Nominal48Vdc * 0.9) THEN
	Is48VOK := -1;
END_IF
IF Module48Vdc > (Nominal48Vdc * 1.1) THEN
	Is48VOK := -1;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="MyModuleInterface" Id="{2168d719-80a8-412e-a875-7c102bb8a0d2}">
      <Declaration><![CDATA[PROPERTY MyModuleInterface : I_TcIoXtsPartModule]]></Declaration>
      <Get Name="Get" Id="{89cf633f-414b-41a7-b6da-6e0666d662cd}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MyModuleInterface := MyModuleIoInterface;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{c9ca3467-a5fd-4003-89ce-a9baa660bd96}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MyModuleIoInterface := MyModuleInterface;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="SetInSim" Id="{13eee03f-0b41-4595-95d5-55a5ef2b6f3f}">
      <Declaration><![CDATA[METHOD SetInSim : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[InSim := true;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>
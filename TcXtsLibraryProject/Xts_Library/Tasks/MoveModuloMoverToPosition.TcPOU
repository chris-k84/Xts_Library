<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MoveModuloMoverToPosition" Id="{86a89fc0-d952-4342-8bc4-3e7afaf8d6b0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK MoveModuloMoverToPosition  IMPLEMENTS I_Task
VAR
	moveAbs	: MC_MoveAbsoluteCA;
	_Axis : REFERENCE TO AXIS_REF;
	_MoveMover : BOOL;
	_stOptions : ST_MoveAbsoluteCAOptions;
	_ErrorId: UDINT;
		State: INT;
	_Done: BOOL;
	_Error: BOOL;
	_Busy: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{5c5502fe-cfbb-4721-939d-6b8391fd3812}">
      <Declaration><![CDATA[METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[moveAbs.Execute := FALSE;
moveAbs.Position := moveAbs.Velocity := 0;
_MoveMover := false;
_Busy := FALSE;
Abort := true;
State := 0;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Acceleration" Id="{bd8e2346-8872-4feb-ac95-f472cf2ca2c7}">
      <Declaration><![CDATA[PROPERTY PUBLIC Acceleration : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{c4ef743d-06c1-4445-9890-b82ffba396f1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Acceleration := moveAbs.Acceleration;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{1c8827c9-2f8f-4b77-8024-4b0046d69ac2}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[moveAbs.Acceleration := Acceleration;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Busy" Id="{98ae5732-f508-463a-8f9c-9f54ad1821f5}">
      <Declaration><![CDATA[PROPERTY Busy : BOOL
]]></Declaration>
      <Get Name="Get" Id="{84ba2f1a-36fd-4d7b-97cb-ca57f0f3f0c7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy := _Busy;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Cycle" Id="{4cb00213-de2b-40d2-a495-86e25cb3d039}">
      <Declaration><![CDATA[METHOD Cycle : HRESULT
VAR_INPUT
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Cycle := S_OK;
CASE State OF
	0:
		IF _MoveMover THEN
			Cycle := S_PENDING;
			_Done := FALSE;
			_Error := FALSE;
			_Busy := TRUE;
			moveAbs.Execute := TRUE;
			IF moveAbs.Busy THEN
				State := 10;
				_MoveMover := FALSE;
			END_IF
		END_IF
		
	10:
		IF NOT moveAbs.Busy THEN
			IF moveAbs.Done THEN
				_Done := TRUE;
			ELSIF moveAbs.Error THEN
				_Error := TRUE;
				_ErrorId := moveAbs.ErrorId;
			END_IF
			_Busy := FALSE;
			moveAbs.Execute := FALSE;
			State := 0;
			Cycle := S_OK;
		END_IF
	ELSE
		Cycle := E_FAIL;
END_CASE

moveAbs(Axis := _Axis, Options := _stOptions);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Deceleration" Id="{9b084d4a-e02d-4702-912a-4bc5910ddae2}">
      <Declaration><![CDATA[PROPERTY PUBLIC Deceleration : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{a47d2d08-c000-41b9-a1f9-a582ebe1b9d1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Deceleration := moveAbs.Deceleration;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{82a7f264-1036-48b4-a621-2fa4d8fd0895}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[moveAbs.Deceleration := Deceleration;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Done" Id="{706feeb3-2a28-4a2a-b819-7bb55bd73ff5}">
      <Declaration><![CDATA[PROPERTY Done : BOOL
]]></Declaration>
      <Get Name="Get" Id="{37c3e926-1b46-4356-8064-b4a1dfbf3ce5}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Done := _Done;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{d69fd401-b2dd-44f6-914b-954c635c1b05}">
      <Declaration><![CDATA[PROPERTY Error : BOOL
]]></Declaration>
      <Get Name="Get" Id="{c20a1bf9-e383-400a-99fa-a6607965fe21}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := _Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{37fbed4c-5b49-4a9c-886b-a9cda5653c34}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	axis : reference TO AXIS_REF;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_Axis REF= axis;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Gap" Id="{6f40f3be-1ac5-4f41-a512-900c33b72e2e}">
      <Declaration><![CDATA[PROPERTY PUBLIC Gap : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{d520ecb2-c250-4598-84bd-dc6b0a2aef6c}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Gap := moveAbs.Gap;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{49d06445-a9cb-4b50-a172-a728c79a3bc7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[moveAbs.Gap := Gap;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Jerk" Id="{557e6884-85fe-4a0b-9fbe-e021e4eb6165}">
      <Declaration><![CDATA[PROPERTY PUBLIC Jerk : mc_lreal]]></Declaration>
      <Get Name="Get" Id="{43424688-9bf6-468e-9d81-7307bd08e1b7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Jerk := moveAbs.Jerk;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{fbdecc92-c967-41e0-99c8-b2c9f3bf8bd0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[moveAbs.Jerk := Jerk;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="MoveTo" Id="{42a523a0-ad8a-4fac-a76b-d1875ec2f808}">
      <Declaration><![CDATA[METHOD MoveTo : BOOL
VAR_INPUT
	Position : MC_LREAL;
	Velocity : MC_LREAL;
	Direction: Tc3_Mc3Definitions.MC_DIRECTION;
	Turns: UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[moveAbs.Position := Position;
moveAbs.Velocity := Velocity;
moveAbs.Direction := Direction;
moveAbs.Options.AdditionalTurns := Turns;
_MoveMover := MoveTo := true;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Options" Id="{1dd7fc51-dd5a-4f57-a3ca-696f6637a39e}">
      <Declaration><![CDATA[PROPERTY PUBLIC Options : ST_MoveAbsoluteCAOptions]]></Declaration>
      <Get Name="Get" Id="{179a8440-f33d-4396-9725-56d6b0191700}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Options := _stOptions;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{18307288-77cd-4621-a1f2-e62bd90c9ccf}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_stOptions := Options;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <LineIds Name="MoveModuloMoverToPosition">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Abort">
      <LineId Id="3" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Acceleration.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Acceleration.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Busy.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Cycle">
      <LineId Id="3" Count="31" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Deceleration.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Deceleration.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Done.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Error.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.FB_init">
      <LineId Id="3" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Gap.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Gap.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Jerk.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Jerk.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.MoveTo">
      <LineId Id="3" Count="3" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Options.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="MoveModuloMoverToPosition.Options.Set">
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
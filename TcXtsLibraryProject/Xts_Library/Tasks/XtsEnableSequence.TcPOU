<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="XtsEnableSequence" Id="{b7e7ab09-3a30-4ddb-a242-e0b5aa00cbc9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK XtsEnableSequence  IMPLEMENTS I_Task
VAR
	_caGroup : I_CollisionGroup;
	moverNumbers : UINT;
	AllMoversEnabled: BOOL;
	EnableTrigger : BOOL;	
	arrMovers : ARRAY[0..MaxMovers] OF I_XtsMover;
	_registeredNumberOfMovers : INT;
	State: INT;
	_Done: BOOL;
	_Error: BOOL;
	_Busy: BOOL;
END_VAR
VAR CONSTANT
	MaxMovers : INT := 255;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{9cec9788-9ce4-4a9f-821c-172bdb3141aa}">
      <Declaration><![CDATA[METHOD Abort : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[EnableTrigger := FALSE;
State := 0;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Busy" Id="{bc4497ef-9c3a-4d02-9785-8733db6c9845}">
      <Declaration><![CDATA[PROPERTY Busy : BOOL
]]></Declaration>
      <Get Name="Get" Id="{d45d9021-7bdc-468f-89fe-ec603e3e38b0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy := _Busy;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Cycle" Id="{2913b891-dfae-43d9-b9d3-4a1a1101f452}">
      <Declaration><![CDATA[METHOD Cycle : HRESULT
VAR
	CAGroupResetResult : BOOL;
	AddMoverResult : HRESULT;
	AddMoverCallResult : HRESULT;
	EnableMoverResult : BOOL;
	CAGroupEnableResult : BOOL;
	LogSentResult : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		IF EnableTrigger THEN
			Cycle := S_PENDING;
			State := 10;
			EnableTrigger := FALSE;
			moverNumbers := 1;
			_Busy := TRUE;
			_Done := FALSE;
			_Error := FALSE;
		END_IF
		
	10:
		FOR moverNumbers := 0 TO (_registeredNumberOfMovers-1) DO
			arrMovers[moverNumbers].Reset();
		END_FOR
		moverNumbers := 0;
		State := 20;
		
	20:
		IF _caGroup.GroupState = CAGroupStatus.mcGroupStateErrorStop THEN
			CAGroupResetResult := SUCCEEDED(_caGroup.Reset());
		END_IF
		State := 30;
		
	30:
		IF _caGroup.AddMoverToThisGroup(MoverToAdd := arrMovers[moverNumbers]) =2 THEN
			State := 40;
		END_IF
		
		
	40:
		IF moverNumbers <> (_registeredNumberOfMovers-1) THEN
			moverNumbers := moverNumbers + 1;
			State := 30;
		ELSE
			FOR moverNumbers := 0 TO (_registeredNumberOfMovers-1) DO
				arrMovers[moverNumbers].EnableMover();
			END_FOR
			State := 50;
		END_IF
		
	50:
		AllMoversEnabled := TRUE;
		FOR moverNumbers := 0 TO (_registeredNumberOfMovers-1) DO
			AllMoversEnabled := TRUE AND arrMovers[moverNumbers].isMoverEnabled();
		END_FOR
		IF AllMoversEnabled THEN
			CAGroupEnableResult := _caGroup.Enable();
			State := 60;
		END_IF
		
	60:
		IF _caGroup.GroupState = 2 THEN
			State := 0;
			_Busy := FALSE;
			_Done := TRUE;
			Cycle := S_OK;
		END_IF
	ELSE
		Cycle := E_FAIL;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Property Name="Done" Id="{81ec7814-89cb-4301-940b-bd26fe7c0dd9}">
      <Declaration><![CDATA[PROPERTY Done : BOOL
]]></Declaration>
      <Get Name="Get" Id="{f5e4b06f-0267-4980-bd12-ca8f03d203a3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Done := _Done;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Enable" Id="{1c2a3468-bb52-4165-8d13-732b960a1dd0}">
      <Declaration><![CDATA[METHOD Enable : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _Busy AND NOT EnableTrigger AND _caGroup <> 0 THEN
	EnableTrigger := TRUE;
ELSE
	Enable := -1;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Error" Id="{de4172ae-7561-44d0-9211-14ccf56f7fba}">
      <Declaration><![CDATA[PROPERTY Error : BOOL
]]></Declaration>
      <Get Name="Get" Id="{7981ac0e-81ff-46ad-91e6-7e6c0cd85d62}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := _Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MyCollisionGroup" Id="{0c241349-a398-40a0-a115-326a5cd04bf6}">
      <Declaration><![CDATA[PROPERTY MyCollisionGroup : I_CollisionGroup]]></Declaration>
      <Get Name="Get" Id="{c45de961-c00e-41dd-bc0b-0921ea45f3ce}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MyCollisionGroup := _caGroup;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{0715b558-a706-48d8-a891-3862516fa554}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_caGroup := MyCollisionGroup;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="RegisterMovers" Id="{330a136c-c434-49ce-bb82-6de99c18307c}">
      <Declaration><![CDATA[METHOD RegisterMovers : HRESULT
VAR_INPUT
	MyMover : I_XtsMover;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[arrMovers[_registeredNumberOfMovers] := MyMover;
_registeredNumberOfMovers := _registeredNumberOfMovers + 1;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>
<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="XtsDisableSequence" Id="{da9628bf-0fcc-432f-b10d-3ad4dd4b7f24}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK XtsDisableSequence IMPLEMENTS I_Task
VAR
	_caGroup : I_CollisionGroup;
	DisableTrigger: BOOL;
	moverNumbers : UINT := 1;
	AllMoversDisabled: BOOL;	
	arrMovers : ARRAY[0..MaxMovers] OF I_XtsMover;
	_registeredNumberOfMovers : INT;
	CaGroupResetResult: BOOL;
	State: DisableState;
	_Done: BOOL;
	_Error: BOOL;
	_Busy: BOOL;
END_VAR
VAR CONSTANT
	MaxMovers : INT := 255;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{86211cf7-3baa-4942-994c-481ee3b2466c}">
      <Declaration><![CDATA[METHOD Abort : BOOL
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[DisableTrigger := FALSE;
State := 0;
Abort := true;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Busy" Id="{31fee075-b465-44b4-a7dd-aab9d5d631b4}">
      <Declaration><![CDATA[PROPERTY Busy : BOOL
]]></Declaration>
      <Get Name="Get" Id="{edcd40ed-55fa-45eb-9c70-bed5c284d98d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy := _Busy;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Cycle" Id="{981b7190-eb15-4a0a-8875-0afb334ed36e}">
      <Declaration><![CDATA[METHOD Cycle : HRESULT
VAR
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	DisableState.Idle:
		IF DisableTrigger THEN
			Cycle := S_PENDING;
			DisableTrigger := FALSE;
			_Busy := TRUE;
			_Done := FALSE;
			_Error := FALSE;
			State := DisableState.Group_Stop;
		END_IF
		
	DisableState.Group_Stop:
		IF _caGroup.IsMoving THEN
			_caGroup.GroupStop();
		END_IF
		State := DisableState.Remove_Movers;
		
	DisableState.Remove_Movers:
		IF _caGroup.IsInStandBy THEN
			IF SUCCEEDED(_caGroup.RemoveAllMovers()) THEN
				State := DisableState.Disable_Movers;
			END_IF
		END_IF
	
	DisableState.Disable_Movers:
		IF _caGroup.GetAxisCount() = 0 THEN
			FOR i := 0 TO (_registeredNumberOfMovers-1) DO
				arrMovers[i].DisableMover();
			END_FOR
			State := DisableState.Disable_Group;
		END_IF
		
	DisableState.Disable_Group:
		AllMoversDisabled := TRUE;
		FOR i := 0 TO (_registeredNumberOfMovers-1) DO
			AllMoversDisabled := AllMoversDisabled AND NOT arrMovers[i].isMoverEnabled();
		END_FOR
		IF AllMoversDisabled THEN
			State := DisableState.Reset_Group;
			_caGroup.Disable();
		END_IF
		
	DisableState.Reset_Group:
		IF _caGroup.IsInErrorStop THEN
			_caGroup.Reset();
		END_IF	
		State := DisableState.Wait_For_Disabled;
		
	DisableState.Wait_For_Disabled:
		IF _caGroup.IsDisabled THEN
			State := DisableState.Idle;
			Cycle := S_OK;
			_Busy := FALSE;
			_Done := TRUE;
		END_IF
	ELSE
		Cycle := E_FAIL;
		_Busy := FALSE;
		_Done := FALSE;
		_Error := TRUE;
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="Disable" Id="{024bbd18-8e3c-4aa1-9d04-45454423df20}">
      <Declaration><![CDATA[METHOD Disable : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF _Busy THEN
	Disable := -1;
	RETURN;
END_IF

IF DisableTrigger THEN
	Disable := -2;
	RETURN;
END_IF

IF _caGroup = 0 THEN
	Disable := -3;
	RETURN;
END_IF

DisableTrigger := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Done" Id="{440a0b71-7140-4d16-8dd2-a4a4081fd61d}">
      <Declaration><![CDATA[PROPERTY Done : BOOL
]]></Declaration>
      <Get Name="Get" Id="{e5bec694-8449-46b8-8efe-c1c6e77a0a8d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Done := _Done;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{6b8cc903-8899-4daa-98e1-e8890e9ccd7b}">
      <Declaration><![CDATA[PROPERTY Error : BOOL
]]></Declaration>
      <Get Name="Get" Id="{9fda5300-f4eb-497a-ab0f-244402c0a65e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := _Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MyCollisionGroup" Id="{c7fd1228-60ef-40d1-92d9-53941726749d}">
      <Declaration><![CDATA[PROPERTY MyCollisionGroup : I_CollisionGroup]]></Declaration>
      <Get Name="Get" Id="{f9297380-397a-4a19-b263-02faa8995379}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MyCollisionGroup := _caGroup;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{cab14c86-20cf-4862-8d26-8fda29b066be}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_caGroup := MyCollisionGroup;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="RegisterMovers" Id="{bd03069d-dc66-46bd-8900-f6243d7673f8}">
      <Declaration><![CDATA[METHOD RegisterMovers : HRESULT
VAR_INPUT
	MyMover : I_XtsMover;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[arrMovers[_registeredNumberOfMovers] := MyMover;
_registeredNumberOfMovers := _registeredNumberOfMovers + 1;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>
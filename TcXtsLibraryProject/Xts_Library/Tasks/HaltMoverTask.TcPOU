<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="HaltMoverTask" Id="{16fe934f-2b92-45c5-becd-cbf7a242dbb1}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK HaltMoverTask  IMPLEMENTS I_Task, I_Object, I_Cyclic, I_Abortable
VAR
	haltMoverCA : Tc3_McCollisionAvoidance.MC_HaltCA;
	_Axis : REFERENCE TO Tc2_MC2.AXIS_REF;
	_Error: BOOL;
	_ErrorID: UDINT;
	_Done: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Method Name="Abort" Id="{48a4c415-0254-4332-8d1a-2734e5dda505}">
      <Declaration><![CDATA[METHOD Abort : Hresult]]></Declaration>
      <Implementation>
        <ST><![CDATA[haltMoverCA.Execute := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="AxisRef" Id="{a9bddd31-e205-4bbe-b0be-0bb7ddf7f5e3}">
      <Declaration><![CDATA[PROPERTY AxisRef : reference to Axis_ref]]></Declaration>
      <Get Name="Get" Id="{0e3b6af2-4e89-4c29-9315-30e22f8c6b94}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[AxisRef	REF= _Axis;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{0e14ea90-18e4-4a1c-9f4c-2cea8c3719c9}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Axis REF= AxisRef;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Busy" Id="{410b2236-4b2d-41d8-b891-c048fa414dcc}">
      <Declaration><![CDATA[PROPERTY Busy : BOOL
]]></Declaration>
      <Get Name="Get" Id="{5856c273-62b7-4af7-b86e-de01e6cc2e07}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Busy := haltMoverCA.Busy;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Cycle" Id="{1e7367c4-25b5-40fa-b219-770d9b7044ce}">
      <Declaration><![CDATA[METHOD Cycle : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT __ISVALIDREF(_Axis) THEN
	Cycle := -1;
	RETURN;
END_IF
haltMoverCA(Axis := _Axis);
_Done := haltMoverCA.Done OR _Done;
_Error := haltMoverCA.Error OR _Error;
IF haltMoverCA.ErrorId <> 0 THEN
	_ErrorID := haltMoverCA.ErrorId;
END_IF
haltMoverCA.Execute := false;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Deceleration" Id="{c87d7270-1a2e-466f-a142-6139e2eda06f}">
      <Declaration><![CDATA[PROPERTY Deceleration : MC_LREAL]]></Declaration>
      <Get Name="Get" Id="{a049ca93-b85d-4787-b520-72ad6ac74f0d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Deceleration := haltMoverCA.Deceleration;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{ae2611d3-59b2-4268-a7c2-500b25ff0ec0}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF Deceleration > 0.0 THEN
	haltMoverCA.Deceleration := Deceleration;
END_IF]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Done" Id="{a09eb2b9-def0-4c01-868b-84cd3b62dc56}">
      <Declaration><![CDATA[PROPERTY Done : BOOL
]]></Declaration>
      <Get Name="Get" Id="{a5814443-bbb5-4f85-a263-8110f08b71d3}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Done := _Done;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{6bb2ee39-e78a-4989-a5b3-4f1b4a227870}">
      <Declaration><![CDATA[PROPERTY Error : BOOL
]]></Declaration>
      <Get Name="Get" Id="{206c977d-3fc3-4519-bfba-0ba62f311fe7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Error := _Error;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Execute" Id="{87eca2aa-365e-4c2f-b198-b62e8029fb82}">
      <Declaration><![CDATA[METHOD Execute : HRESULT
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF haltMoverCA.Execute THEN
	Execute := -1;
	RETURN;
END_IF

IF NOT __ISVALIDREF(_axis) THEN
	Execute	 := -1;
	RETURN;
END_IF

haltMoverCA.Execute := TRUE;
_Error := FALSE;
_ErrorId := 0;
_Done := FALSE;
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Gap" Id="{a94177ce-b18c-4479-ae6f-5707566b0317}">
      <Declaration><![CDATA[PROPERTY Gap : MC_LREAL]]></Declaration>
      <Get Name="Get" Id="{ec2ed493-6955-4aef-baef-795d6fef3927}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Gap := haltMoverCA.Gap;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{43b68502-e2f4-4b37-a3be-43a3ab3afcec}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF Gap > 50.0 THEN
	haltMoverCA.Gap := Gap;
END_IF]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="Jerk" Id="{36146f01-bab8-49f7-9914-96e1977269b5}">
      <Declaration><![CDATA[PROPERTY Jerk : MC_LREAL]]></Declaration>
      <Get Name="Get" Id="{bd60b227-3eb3-44e9-be6f-0a525b541f10}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Jerk := haltMoverCA.Jerk;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{356145f4-af65-48cf-aa74-d0bf709b5382}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF Jerk > 0.0 THEN
	haltMoverCA.Jerk := Jerk;
END_IF]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="RegisterWithParent" Id="{1eb21580-73b7-42fe-bf94-583ead68438b}">
      <Declaration><![CDATA[METHOD RegisterWithParent
VAR_INPUT
	Runner	: Base_Library.I_HostObjects;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Runner.RegisterCyclic(THIS^);
Runner.RegisterAbortable(THIS^);
Runner.RegisterTask(THIS^);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>
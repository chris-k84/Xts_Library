<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="Process" Id="{5bb3084c-8dc2-4985-92e4-194b505a9bed}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Process EXTENDS Station IMPLEMENTS IProcess
VAR
	_endPos : MC_LREAL;
	_processVelo : MC_LREAL;
	State : INT;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[{analysis -2}]]></ST>
    </Implementation>
    <Property Name="EndPosition" Id="{7f4a20d7-f0db-4d2e-987f-1dcaac0ba263}">
      <Declaration><![CDATA[PROPERTY EndPosition : MC_LREAL]]></Declaration>
      <Get Name="Get" Id="{87faf885-3d96-408c-9e10-b4693bedb554}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[EndPosition := _endPos;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_Init" Id="{5e3199be-9a54-4a76-84c3-07069d45f332}">
      <Declaration><![CDATA[(*FB_Init is always available implicitly and it is used primarily for initialization.
The return value is not evaluated. For a specific influence, you can also declare the
methods explicitly and provide additional code there with the standard initialization
code. You can evaluate the return value.*)
METHOD FB_Init : BOOL
VAR_INPUT
	(* TRUE: the retain variables are initialized (reset warm / reset cold)*)
	bInitRetains	: BOOL;
	(* TRUE: the instance will be copied to the copy code afterward (online change)   *)
	bInCopyCode	: BOOL;
	Position	: LREAL;
	EndPosition : LREAL;
	ProcessVelocity : LREAL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_endPos := EndPosition;
_processVelo := ProcessVelocity;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Operation" Id="{4496305a-dcfe-4c87-9747-73150426f565}">
      <Declaration><![CDATA[METHOD PROTECTED Operation : BOOL
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
	0:
		IF _Operating THEN
			IF Succeeded(_MyMover.MoveTo(RequiredPosition := _endPos,
							MoveVelocity := _processVelo,
							NonModuloMove := FALSE)) THEN
				State := 1;
			END_IF
		END_IF
	1:
		IF _MyMover.getTrackPosition() = _endPos THEN
			_Operating := FALSE;
			_Complete := TRUE;
			State := 0;
		END_IF
END_CASE	]]></ST>
      </Implementation>
    </Method>
    <Property Name="ProcessVelocity" Id="{2b95ecf7-a866-474e-93f5-19b6d8e1320a}">
      <Declaration><![CDATA[PROPERTY ProcessVelocity : MC_LREAL]]></Declaration>
      <Get Name="Get" Id="{25f5b52c-e44e-4bf2-b54e-ddc8a6dd0b98}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ProcessVelocity := _processVelo;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>